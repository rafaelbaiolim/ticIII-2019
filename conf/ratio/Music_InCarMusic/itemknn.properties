# set data directory
dfs.data.dir=../../dataset
# set result directory
# recommender result will output in this folder
dfs.result.dir=../../results/ratio

# convertor
# load data and splitting data 
# into two (or three) set
# setting dataset name
#data.input.path=ml-10M100k/ratings.dat
data.input.path=Music_InCarMusic.txt
#data.input.path=movielens/ml-1m/ratings.dat
#data.input.path=Gowalla/all.txt
# setting dataset format(UIR, UIRT)
data.column.format=UIR

#data.convert.sep = ::
#data.convert.sep = \t
#data.convert.sep =
data.cache = true

# setting method of split data
# value can be ratio, loocv, given, KCV
data.model.splitter=ratio
#data.splitter.cv.number=5
# using rating to split dataset
data.splitter.ratio=rating
# filmtrust dataset is saved by text
# text, arff is accepted
data.model.format=text
# the ratio of trainset
# this value should in (0,1)
data.splitter.trainset.ratio=0.8
#===========================  FIM DATA CONF =================
rec.recommender.class=itemknn
# true for item ranking, false for rating prediction
rec.recommender.isranking=false
rec.recommender.ranking.topn=10
rec.recommender.similarities=item
rec.similarity.class=cos
rec.neighbors.knn.number=50
rec.similarity.shrinkage=10